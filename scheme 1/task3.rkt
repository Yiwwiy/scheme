#lang scheme
(define (name x)
(cond
((= x 1) "один")
((= x 2) "два")
((= x 3) "три")
((= x 4) "четыре")
((= x 5) "пять")
((= x 6) "шесть")
((= x 7) "семь")
((= x 8) "восемь")
((= x 9) "девять")
((= x 10) "десять")
((= x 11) "одиннадцать")
((= x 12) "двенадцать")
((= x 13) "тринадцать")
((= x 14) "четырнадцать")
((= x 15) "пятнадцать")
((= x 16) "шестнадцать")
((= x 17) "семнадцать")
((= x 18) "восемнадцать")
((= x 19) "девятнадцать")
((= x 20) "двадцать")
((= x 30) "тридцать")
((= x 40) "сорок")
((= x 50) "пятьдесят")
((= x 60) "шестьдесят")
((= x 70) "семьдесят")
((= x 80) "восемьдесят")
((= x 90) "девяносто")
((= x 100) "сто")
(else "")
)
)
( define (dec x)
   (truncate( / x 10)))
( define (ed x)
   (remainder x 10))
( define fin string-append)
    ( define (st x)
(if (<= x 20) (name x)
(fin (name(* 10 (dec x))) " " (name (ed x)))))
